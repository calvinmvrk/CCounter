<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        99rT/wETaSaXYps1WAAAAABJRU5ErkJggg==
</value>
  </data>
</root>